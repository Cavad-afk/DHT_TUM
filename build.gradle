buildscript {
    ext.kotlin_version = '1.2.60'
    ext.junitVersion = "5.0.0"
    ext.junitPlatformVersion = "1.0.0"

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlatformVersion"
    }
}

version '0.0.1'

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"

    runtime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    runtime "org.junit.platform:junit-platform-console:$junitPlatformVersion"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5'

    compile 'com.google.code.gson:gson:2.8.4'

    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'

    compile group: 'com.google.guava', name: 'guava', version: '18.0'
}

apply from: "junit5.gradle"

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'sssemil.com.p2p.dht.MainKt'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}